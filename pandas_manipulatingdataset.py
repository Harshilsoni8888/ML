# -*- coding: utf-8 -*-
"""Pandas-ManipulatingDataSet.ipynb

Automatically generated by Colaboratory.



# To install Pandas library
#pip install pandas

# Load Pandas Library
import pandas as pd
import numpy as np

#Creating DataFrame and Loading csv file
df = pd.read_csv('/content/sample_data/placement.csv')
df
#len(df)
#df.shape
#df
#df.head()
#df.tail(2)
#df.query('Graduation > 80').head(2)
#df.query("Course == 'MCA'").head(2)

#Display Dataframe
#df

#Loading top few rows of DataFrame
#df.head(3)

#Loading bottom few rows of DataFrame
#df.tail(3)

#Dataframe dimension - Total number of rows and columns
df.shape

#Dataframe length - Total number of Rows
#len(df)

#Navigating DataFrame - Display rows with all columns from 0th index to 2nd index 
#df.iloc[0:3]

#Navigating DataFrame - Display rows with all columns from 0th index(default) to 2nd index 
#df.iloc[:3]

#Navigating DataFrame - Display rows with all columns from 3rd as start index till end of total length
#df.iloc[3:]

#Display all the columns/features of the Dataset
#df.columns
#df.columns[1]  # Column Name at Index = 1
#df.loc[[0,3,5]]  # Records at Rows with Index = 0,3,5

#Selecting Rows based on Conditions
#1. Option 1
df[df['Course']== 'MCA'].head(2)

#2. Option 2
df.query("Course == 'MCA'").head(2) 

#Combining conditions
#1. Option 1
df[(df['Course'] == 'MScIT') & (df['Graduation'] > 80)].head(2)

#2. Option 2
df.query("Graduation > 80 & Course == 'MScIT' ").head(2)

#Finding Minimum, Maximum, Sum, Average and Count on Numeric Column
df['PG Avg. till now (%)'].max()
#df['PG Avg. till now (%)'].min()
#df['PG Avg. till now (%)'].mean()
#df['PG Avg. till now (%)'].count()
#df['PG Avg. till now (%)'].sum()

#Replacing Values 
#df['M/F'].replace("Male","M")

#Replacing Multiple Values 
#df['M/F'].replace(["M", "Female"],["Male","F"])

#Renaming Columns
#df.rename(columns={'M/F': 'Gender'})

#Check value is Null
df[df['Name'].isnull()].head(2)

#Deleting Columns
#df.drop('Name', axis=1)
#df.drop(['Sr No', 'Course'], axis=1)
#df.drop(columns=['Name','Course'], axis=1)
#df.drop(df.columns[0], axis=1)

#Deleting Rows
df.drop([0,1])

#Deleting Rows with Condition
#df1 = df[df['M/F'] != 'Female']
#df1
#df1.drop([0,3])
#Deleting All Rows with Condition
#df1 = df[df['M/F'] != 'Female']
#df1
#df1.drop(df1.index)

#Finding Unique Values and Count
df
#df['Course'].unique()
#df['Course'].value_counts()
#df['Course'].nunique()

#Handling Missing Values
#df[df['Course'].isnull()].tail(5)
df['Course'] = df['Course'].replace(np.nan,'CS&IT')
df['Course'].tail(5)

#Grouping Rows by Values
#df.groupby('Course').mean()
#df.groupby(['Course','M/F']).mean()
df.groupby(['Course','M/F'])['Graduation'].mean()

#Looping Over
#for name in df['Name'][0:5]:
  # print(name.lower())
[name.upper() for name in df['Name'][0:2]]


#Merging and Concating DataFrames
# merge() with paramter on - specifying column name
# concat() used with axis=0 and axis=1
# append() to add row at end

